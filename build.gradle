plugins {
    id 'java'
}

group = 'rest.dawn'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url "https://maven.enginehub.org/repo/" }
}

dependencies {
    compileOnly("org.spigotmc:spigot-api:1.21.4-R0.1-SNAPSHOT") {
        exclude group: "com.google.guava", module: "guava"
        exclude group: "com.google.code.gson", module: "gson"
    }

    compileOnly 'net.luckperms:api:5.4'

    compileOnly("com.sk89q.worldguard:worldguard-bukkit:7.0.12") {
        exclude group: "com.google.guava", module: "guava"
        exclude group: "com.google.code.gson", module: "gson"
    }

    // Guava version override
    implementation("com.google.guava:guava:33.3.1-jre") {
        because("Resolve version conflicts with Spigot and WorldGuard")
    }

    // Gson version override
    implementation("com.google.code.gson:gson:2.10.1") {
        because("Resolve version conflicts with Spigot and WorldGuard")
    }
}


def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
